# this is HW#8 

1. to import the dataset I used this command: 
	./mongoimport --db test --collection restaurants --drop --file /Users/larrywilson/Desktop/MUM/MWP/hws/HW\#8/retaurants.json;

2. Write a MongoDB query to display all the documents in the collection restaurants. 
	db.restaurants.find();

3.Write a MongoDB query to display the fields restaurant_id, name, district and cuisine for all the documents in the collection restaurant.
	db.restaurants.find({},{restaurant_id:1,name:1,borough:1,cuisine:1});

4. Write a MongoDB query to display the fields restaurant_id, name, district and cuisine, but exclude the field _id for all the documents in the collection restaurant. 
	db.restaurants.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0});


5.Write a MongoDB query to display the fields restaurant_id, name, district and zipcode, but exclude the field _id for all the documents in the collection restaurant. 
	db.restaurants.find({},{restaurant_id:1,name:1,borough:1,"address.zipcode":1,_id:0});

6.Write a MongoDB query to display all the restaurant which is in the district Bronx.
	db.restaurants.find({borough:"Bronx"});
	

7.Write a MongoDB query to display the first 5 restaurant which is in the district Bronx. 
	db.restaurants.find({borough:"Bronx"}).limit(5)

8.Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in the district Bronx. 
	db.restaurants.find({borough:"Bronx"}).skip(5).limit(5)

9.Write a MongoDB query to find the restaurants which locates in latitude value less than -95.754168.
	db.restaurants.find({"address.coord.0":{$lt:-95.754168}})

10.Write a MongoDB query to find the restaurants that does not prepare any cuisine of 'American' and their grade score more than 70 and latitude less than -65.754168. 
	db.restaurants.find({$and:[{"address.coord.0":{$lt:-65.754168}},{'cuisine':{$ne:'American'}},{"grades.score":{$gt:70}}]})

11.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'Wil' as first three letters for its name. 
db.restaurants.find({"name" :  /^Wil/},{restaurant_id:1,name:1,borough:1,"cuisine":1});

12.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'ces' as last three letters for its name.
	db.restaurants.find({"name" :  /ces$/},{restaurant_id:1,name:1,borough:1,"cuisine":1});

13.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which contains 'Reg' as three letters somewhere in its name. 
	db.restaurants.find({"name" :  /.*Reg*./},{restaurant_id:1,name:1,borough:1,"cuisine":1});


14.Write a MongoDB query to find the restaurants which belongs to the district Bronx and prepared either American or Chinese dish.
	db.restaurants.find({ "borough": "Bronx" , $or : [{ "cuisine" : "American " },{ "cuisine" : "Chinese" }] } );



15.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which belongs to the district Staten Island or Queens or Bronxor Brooklyn. 
	db.restaurants.find({$or : [{ "borough" : "Staten Island" },{ "borough" : "Queens" },{ "borough" : "Brooklyn" },{ "borough" : "Bronxor" }]} ,{restaurant_id:1,name:1,borough:1,"cuisine":1} );

16.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which are not belonging to the district Staten Island or Queens or Bronxor Brooklyn. 
db.restaurants.find({"borough" :{$nin :["Staten Island","Queens","Bronx","Brooklyn"]}},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1});

16.Write a MongoDB query to find the restaurant Id, name, district and cuisine for those restaurants which achieved a score which is not more than 10.



Write a MongoDB query to find the restaurant Id, name, address and geographical location for those restaurants where 2nd element of coord array contains a value which is more than 42 and up to 52. 
Write a MongoDB query to arrange the name of the restaurants in ascending order along with all the columns. 
Write a MongoDB query to arrange the name of the restaurants in descending order along with all the columns. 
Write a MongoDB query to arranged the name of the cuisine in ascending order and for those same cuisine district should be in descending order.
Write a MongoDB query to know whether all the addresses contains the street or not. 
Write a MongoDB query which will select all documents in the restaurants collection where the coord field value is Double.
Write a MongoDB query to find the restaurant name, district, longitude and latitude and cuisine for those restaurants which contains 'Mad' as first three letters of its name. 